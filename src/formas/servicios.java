/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * servicio.java
 *
 * Created on 11/02/2011, 17:14:46
 */
package formas;

import com.mysql.jdbc.Connection;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author ibrahinaraujo
 */
public class servicios extends javax.swing.JFrame {

    public static Connection conn1;
    public static java.sql.Statement sql;
    public static ResultSet rs;
    private int opcion;
    public static int swe = 0;
    public static String txtopi, txtopm, txtope, Mcodserv;
    public Integer Numero;

    /**
     * Creates new form diagnos
     */
    public servicios() {
        initComponents();
        setIconImage(new ImageIcon("./imagenes/ibraico.png").getImage());
        setLocationRelativeTo(null);
        txtcodserv.requestFocus();
        swe = 0;
        JTableHeader cabeceraTabla1 = Tabla1.getTableHeader();
        cabeceraTabla1.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 12));
        cabeceraTabla1.setBackground(new java.awt.Color(0, 102, 153));
        cabeceraTabla1.setForeground(new java.awt.Color(255, 255, 255));
        JTableHeader cabeceraTabla2 = Tabla2.getTableHeader();
        cabeceraTabla2.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 12));
        cabeceraTabla2.setBackground(new java.awt.Color(0, 102, 153));
        cabeceraTabla2.setForeground(new java.awt.Color(255, 255, 255));
        cargar_tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        btonincluir = new javax.swing.JButton();
        btoneliminar = new javax.swing.JButton();
        btonmodificar = new javax.swing.JButton();
        btoncancelar = new javax.swing.JButton();
        btonaceptar = new javax.swing.JButton();
        aviso = new javax.swing.JTextField();
        tablapane = new javax.swing.JTabbedPane();
        pane1 = new javax.swing.JPanel();
        txtcodserv = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        txtdenserv = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        pane2 = new javax.swing.JPanel();
        Mtexto = new javax.swing.JFormattedTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        Btontabla = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("√Årea de servicios");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(null);

        btonincluir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btonincluir.setForeground(new java.awt.Color(0, 51, 102));
        btonincluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/incluir.png"))); // NOI18N
        btonincluir.setText("Incluir");
        btonincluir.setToolTipText("Incluir Registro");
        btonincluir.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btonincluir.setBorderPainted(false);
        btonincluir.setContentAreaFilled(false);
        btonincluir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btonincluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonincluirActionPerformed(evt);
            }
        });
        jPanel5.add(btonincluir);
        btonincluir.setBounds(140, 10, 80, 30);

        btoneliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btoneliminar.setForeground(new java.awt.Color(0, 51, 102));
        btoneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar.png"))); // NOI18N
        btoneliminar.setText("Eliminar");
        btoneliminar.setToolTipText("Eliminar Registro");
        btoneliminar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btoneliminar.setBorderPainted(false);
        btoneliminar.setContentAreaFilled(false);
        btoneliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btoneliminar.setMaximumSize(new java.awt.Dimension(87, 23));
        btoneliminar.setMinimumSize(new java.awt.Dimension(87, 23));
        btoneliminar.setPreferredSize(new java.awt.Dimension(87, 23));
        btoneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoneliminarActionPerformed(evt);
            }
        });
        jPanel5.add(btoneliminar);
        btoneliminar.setBounds(220, 10, 80, 30);

        btonmodificar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btonmodificar.setForeground(new java.awt.Color(0, 51, 102));
        btonmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btonmodificar.setText("Editar");
        btonmodificar.setToolTipText("Modificar Registro");
        btonmodificar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btonmodificar.setBorderPainted(false);
        btonmodificar.setContentAreaFilled(false);
        btonmodificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btonmodificar.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        btonmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonmodificarActionPerformed(evt);
            }
        });
        jPanel5.add(btonmodificar);
        btonmodificar.setBounds(300, 10, 80, 30);

        btoncancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btoncancelar.setForeground(new java.awt.Color(0, 51, 102));
        btoncancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btoncancelar.setText("Cancelar");
        btoncancelar.setToolTipText("Cancelar Registro");
        btoncancelar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btoncancelar.setBorderPainted(false);
        btoncancelar.setContentAreaFilled(false);
        btoncancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btoncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoncancelarActionPerformed(evt);
            }
        });
        jPanel5.add(btoncancelar);
        btoncancelar.setBounds(380, 10, 80, 30);

        btonaceptar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btonaceptar.setForeground(new java.awt.Color(0, 51, 102));
        btonaceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/aceptar.png"))); // NOI18N
        btonaceptar.setText("Guadar");
        btonaceptar.setToolTipText("Aceptar Registro");
        btonaceptar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btonaceptar.setBorderPainted(false);
        btonaceptar.setContentAreaFilled(false);
        btonaceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btonaceptar.setIconTextGap(8);
        btonaceptar.setMaximumSize(new java.awt.Dimension(87, 23));
        btonaceptar.setMinimumSize(new java.awt.Dimension(87, 23));
        btonaceptar.setPreferredSize(new java.awt.Dimension(87, 23));
        btonaceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonaceptarActionPerformed(evt);
            }
        });
        jPanel5.add(btonaceptar);
        btonaceptar.setBounds(460, 10, 80, 30);

        aviso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        aviso.setForeground(new java.awt.Color(0, 0, 153));
        aviso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aviso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.add(aviso);
        aviso.setBounds(20, 10, 100, 20);

        tablapane.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        pane1.setLayout(null);

        txtcodserv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtcodserv.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtcodserv.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtcodserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodservActionPerformed(evt);
            }
        });
        pane1.add(txtcodserv);
        txtcodserv.setBounds(100, 10, 50, 19);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Codigo");
        pane1.add(jLabel3);
        jLabel3.setBounds(20, 10, 50, 15);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("servicios");
        pane1.add(jLabel2);
        jLabel2.setBounds(20, 60, 70, 15);

        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "oid", "Codigo", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Tabla1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Tabla1MouseReleased(evt);
            }
        });
        Tabla1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Tabla1KeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(Tabla1);
        if (Tabla1.getColumnModel().getColumnCount() > 0) {
            Tabla1.getColumnModel().getColumn(0).setMinWidth(0);
            Tabla1.getColumnModel().getColumn(0).setPreferredWidth(0);
            Tabla1.getColumnModel().getColumn(0).setMaxWidth(0);
            Tabla1.getColumnModel().getColumn(1).setMinWidth(50);
            Tabla1.getColumnModel().getColumn(1).setPreferredWidth(50);
            Tabla1.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        pane1.add(jScrollPane4);
        jScrollPane4.setBounds(20, 80, 600, 230);

        txtdenserv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pane1.add(txtdenserv);
        txtdenserv.setBounds(100, 40, 450, 20);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 102));
        jLabel4.setText("√Årea de");
        pane1.add(jLabel4);
        jLabel4.setBounds(20, 40, 70, 15);

        tablapane.addTab("Servicios", pane1);

        pane2.setLayout(null);

        Mtexto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        Mtexto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Mtexto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Mtexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MtextoKeyPressed(evt);
            }
        });
        pane2.add(Mtexto);
        Mtexto.setBounds(20, 10, 340, 19);

        jRadioButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(0, 51, 102));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Servicios");
        pane2.add(jRadioButton1);
        jRadioButton1.setBounds(430, 6, 89, 23);

        Btontabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        Btontabla.setToolTipText("Limpiar Tabla");
        Btontabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtontablaActionPerformed(evt);
            }
        });
        pane2.add(Btontabla);
        Btontabla.setBounds(550, 5, 30, 30);

        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "reg", "Codigo", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tabla2KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla2);
        if (Tabla2.getColumnModel().getColumnCount() > 0) {
            Tabla2.getColumnModel().getColumn(0).setMinWidth(0);
            Tabla2.getColumnModel().getColumn(0).setPreferredWidth(0);
            Tabla2.getColumnModel().getColumn(0).setMaxWidth(0);
            Tabla2.getColumnModel().getColumn(1).setMinWidth(50);
            Tabla2.getColumnModel().getColumn(1).setPreferredWidth(50);
            Tabla2.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        pane2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 40, 560, 270);

        tablapane.addTab("Busqueda", pane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tablapane)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tablapane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargar_tabla() {
        DefaultTableModel tr = (DefaultTableModel) Tabla1.getModel();
        try {
            rs = sql.executeQuery("select *  from servicios WHERE edo_reg='A' ORDER BY cod_serv");
            while (rs.next()) {
                Integer vreg = rs.getInt("oid");
                String vcodserv = rs.getString("cod_serv");
                String vdenserv = rs.getString("den_serv");

                tr.addRow(new Object[]{new Integer(vreg), vcodserv, vdenserv});
                Tabla1.setModel(tr);
                TableColumn column = null;
            }
        } catch (Exception e) {
        }
    }

    private void limpiar() {
        txtcodserv.setText(null);
        txtcodserv.setText(null);
        txtdenserv.setText(null);
        txtcodserv.setEnabled(true);
        DefaultTableModel tr = (DefaultTableModel) Tabla2.getModel();
        tr.setRowCount(0);
        txtcodserv.requestFocus();
    }

    private void btonincluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonincluirActionPerformed
        if (existeCodServicio(txtcodserv.getText())) {
            JOptionPane.showMessageDialog(this, "YA EXISTE ESTE C√ìDIGO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        } else if (existeServicio(txtdenserv.getText())) {
            JOptionPane.showMessageDialog(this, "YA EXISTE UNA √ÅREA DE SERVICIO CON ESE NOMBRE", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        } else {
            opcion = 1;
            aviso.setText("INCLUIR");
            //txtcodserv.setText(null);
            //txtdenserv.setText("");
            txtcodserv.setEnabled(true);
            btonmodificar.setEnabled(false);
            btoneliminar.setEnabled(false);
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(true);
            txtcodserv.requestFocus();
        }
    }//GEN-LAST:event_btonincluirActionPerformed

    private void btoneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoneliminarActionPerformed
        if (swe != 0) {
            opcion = 3;
            swe = 1;
            aviso.setText("ELIMINACION");
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(true);
        }
}//GEN-LAST:event_btoneliminarActionPerformed

    private void btonmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonmodificarActionPerformed
        if (swe != 0) {
            opcion = 2;
            txtcodserv.setEnabled(false);
            swe = 1;
            aviso.setText("MODIFICAR");
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(true);
        }
}//GEN-LAST:event_btonmodificarActionPerformed

    private void btoncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoncancelarActionPerformed
        opcion = 0;
        aviso.setText("");
        swe = 0;
        limpiar();
        btonmodificar.setEnabled(false);
        btoneliminar.setEnabled(false);
        btoncancelar.setEnabled(true);
        btonaceptar.setEnabled(false);
        //btonsalir.setEnabled(true);       
        txtcodserv.requestFocus();
}//GEN-LAST:event_btoncancelarActionPerformed

    private void btonaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonaceptarActionPerformed
        Mcodserv = txtcodserv.getText();
        // Ingreso de Registro
        if (opcion == 0) {
            JOptionPane.showMessageDialog(this, "ELIGE UN OPCI√ìN", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        } else if(txtcodserv.getText().isEmpty() || txtdenserv.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "CAMPOS SIN RELLENAR.\nPOR FAVOR, ESCRIBA EN LOS CAMPOS VACIOS", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (existeCodServicio(txtcodserv.getText()) && opcion == 1) {
            JOptionPane.showMessageDialog(this, "YA EXISTE ESTE C√ìDIGO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        } else if (existeServicio(txtdenserv.getText()) && opcion != 3) {
            JOptionPane.showMessageDialog(this, "YA EXISTE UNA √ÅREA DE SERVICIO CON ESE NOMBRE", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (opcion == 1) {
                try {
                    String vedoreg = "A";
                    String vcodcia = "16";
                    String vcodserv = txtcodserv.getText().toUpperCase();
                    String vdenserv = txtdenserv.getText().toUpperCase();

                    boolean state = sql.execute("INSERT INTO servicios (cod_serv, den_serv, cod_cia, edo_reg) "
                            + "values('" + vcodserv + "','" + vdenserv + "','" + vcodcia + "','" + vedoreg + "')");

                    if (!state) {
                        JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "ERROR EN LA ACTUALIZACI√ìN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                }
            }

            // Actualizacion del Registro
            if (opcion == 2) {

                int a = JOptionPane.showConfirmDialog(this, "Desea Modificar el Registro"
                        + "", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                if (a == 0) {
                    try {

                        boolean state = sql.execute("update servicios "
                                + " SET den_serv = '" + txtdenserv.getText().toUpperCase().trim() + "'"
                                + " WHERE oid     = '" + Numero + "'");

                        if (!state) {
                            JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "ERROR EN LA ACTUALIZACI√ìN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                        }

                    } catch (Exception e) {
                    }
                }
            }

            // Eliminacion del Registro
            if (opcion == 3) {
                int a = JOptionPane.showConfirmDialog(this, "¬øDESEA ELIMINAR EL AREA DE SERVICIO?", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                if (a == 0) {
                    try {
                        //boolean state = sql.execute("DELETE FROM servicios WHERE cod_serv = '"+Tabla1.getValueAt(Tabla1.getSelectedRow(), 1).toString().trim()+"' LIMIT 1");
                        boolean state = sql.execute("update servicios "
                                + " SET edo_reg = 'D'"
                                + " WHERE oid     = '" + Numero + "'");
                        if (!state) {
                            JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "ERROR EN LA ACTUALIZACI√ìN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (Exception e) {
                    }
                }
            }
            aviso.setText("");
            DefaultTableModel tr = (DefaultTableModel) Tabla1.getModel();
            tr.setRowCount(0);
            cargar_tabla();
            swe = 0;
        }
}//GEN-LAST:event_btonaceptarActionPerformed

    private void txtcodservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodservActionPerformed
        Mcodserv = txtcodserv.getText();
        try {
            rs = sql.executeQuery("select * from servicios where edo_reg = 'A' and cod_serv = '" + Mcodserv + "' ");

            while (rs.next()) {
                txtcodserv.setText(rs.getString("cod_serv"));
                txtdenserv.setText(rs.getString("den_serv"));
            }
        } catch (Exception e) {
        }
}//GEN-LAST:event_txtcodservActionPerformed

    private void MtextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MtextoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            evt.setKeyCode(0);
            DefaultTableModel tr = (DefaultTableModel) Tabla2.getModel();
            tr.setRowCount(0);
            Mtexto.setText(null);
            Mtexto.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel tr = (DefaultTableModel) Tabla2.getModel();
            if (this.jRadioButton1.isSelected()) {
                try {
                    rs = sql.executeQuery("select *  from servicios  where edo_reg = 'A' and den_serv like '" + Mtexto.getText() + "%' order by den_serv");

                    while (rs.next()) {
                        Integer vreg = rs.getInt("oid");
                        String vcodserv = rs.getString("cod_serv");
                        String vdenserv = rs.getString("den_serv");

                        tr.addRow(new Object[]{new Integer(vreg), vcodserv, vdenserv});
                        Tabla2.setModel(tr);
                        TableColumn column = null;
                    }
                } catch (Exception e) {
                }
            }
        }
}//GEN-LAST:event_MtextoKeyPressed

    private void BtontablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtontablaActionPerformed
        DefaultTableModel tr = (DefaultTableModel) Tabla2.getModel();
        tr.setRowCount(0);
        Mtexto.setText(null);
        Mtexto.requestFocus();
}//GEN-LAST:event_BtontablaActionPerformed

    private void Tabla2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla2KeyPressed
        int fila = Tabla2.getSelectedRow();
        Numero = (Integer) Tabla2.getValueAt(fila, 0);
        txtcodserv.setText(Tabla2.getValueAt(fila, 1).toString().trim());
        txtdenserv.setText(Tabla2.getValueAt(fila, 2).toString().trim());
        tablapane.setSelectedIndex(0);
        Mtexto.setText(null);
        DefaultTableModel tr = (DefaultTableModel) Tabla2.getModel();
        tr.setRowCount(0);
        swe = 1;
}//GEN-LAST:event_Tabla2KeyPressed

    private void Tabla1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla1KeyReleased
        int fila = Tabla1.getSelectedRow();
        Numero = (Integer) Tabla1.getValueAt(fila, 0);
        txtcodserv.setText(Tabla1.getValueAt(fila, 1).toString().trim());
        txtdenserv.setText(Tabla1.getValueAt(fila, 2).toString().trim());
    }//GEN-LAST:event_Tabla1KeyReleased

    private void Tabla1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla1MousePressed
        int fila = Tabla1.getSelectedRow();
        Numero = (Integer) Tabla1.getValueAt(fila, 0);
        txtcodserv.setText(Tabla1.getValueAt(fila, 1).toString().trim());
        txtdenserv.setText(Tabla1.getValueAt(fila, 2).toString().trim());
        permiso();
        swe = 1;
    }//GEN-LAST:event_Tabla1MousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (swe == 0) {
            permiso();
            btonmodificar.setEnabled(false);
            btoneliminar.setEnabled(false);
            btonaceptar.setEnabled(false);
        }
    }//GEN-LAST:event_formWindowActivated

    private void Tabla1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla1MouseReleased
        int fila = Tabla1.getSelectedRow();
        Numero = (Integer) Tabla1.getValueAt(fila, 0);
        txtcodserv.setText(Tabla1.getValueAt(fila, 1).toString().trim());
        txtdenserv.setText(Tabla1.getValueAt(fila, 2).toString().trim());
    }//GEN-LAST:event_Tabla1MouseReleased
    private void permiso() {
        btonaceptar.setEnabled(false);
        if (txtopi.compareTo("0") == 0) {
            btonincluir.setEnabled(false);
        } else {
            btonincluir.setEnabled(true);
        }
        if (txtopm.compareTo("0") == 0) {
            btonmodificar.setEnabled(false);
        } else {
            btonmodificar.setEnabled(true);
        }
        if (txtope.compareTo("0") == 0) {
            btoneliminar.setEnabled(false);
        } else {
            btoneliminar.setEnabled(true);
        }
    }

    boolean existeCodServicio(String name) {
        try {
            rs = sql.executeQuery("SELECT cod_serv FROM servicios WHERE cod_serv = '" + name + "'");
            if (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return false;
    }

    boolean existeServicio(String name) {
        try {
            rs = sql.executeQuery("SELECT den_serv FROM servicios WHERE den_serv = '" + name + "'");
            if (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new servicios().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btontabla;
    private javax.swing.JFormattedTextField Mtexto;
    private javax.swing.JTable Tabla1;
    private javax.swing.JTable Tabla2;
    private javax.swing.JTextField aviso;
    private javax.swing.JButton btonaceptar;
    private javax.swing.JButton btoncancelar;
    private javax.swing.JButton btoneliminar;
    private javax.swing.JButton btonincluir;
    private javax.swing.JButton btonmodificar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pane1;
    private javax.swing.JPanel pane2;
    private javax.swing.JTabbedPane tablapane;
    private javax.swing.JFormattedTextField txtcodserv;
    private javax.swing.JFormattedTextField txtdenserv;
    // End of variables declaration//GEN-END:variables

}
