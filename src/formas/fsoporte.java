/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * fsoporte.java
 *
 * Created on 08-jun-2011, 6:45:30
 */
package formas;

import Controller.SoporteController;
import com.mysql.jdbc.Connection;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import model.Soporte;

/**
 *
 * @author ibrahinaraujo
 */
public class fsoporte extends javax.swing.JFrame {

    public static Connection conn1;
    public static java.sql.Statement sql;
    private ResultSet rs;
    private int opcion;
    public static int swe = 0;
    public static String Nregistro, fecha;
    public static String txtopi, txtopm, txtope;
    public String fecrec, fecdes, fecconte, Mfecha, mcode, mdes, Medoreg, Void;
    public static String fileName, mfila;
    proceso PROCE = new proceso();
    public Date d;
    ClienteView cliente;

    /**
     * Creates new form fsoporte
     */
    public fsoporte() {
        initComponents();
        textFechaEnt.getDateEditor().setEnabled(false);
        textFechaSal.getDateEditor().setEnabled(false);
        textFechaEnt.setMinSelectableDate(new Date());
        textFechaSal.setMinSelectableDate(new Date());
        setIconImage(new ImageIcon("./imagenes/ibraico.png").getImage());
        setLocationRelativeTo(null);
        textFechaEnt.requestFocus();
        JTableHeader cabeceraTabla1 = Tabla1.getTableHeader();
        cabeceraTabla1.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 12));
        cabeceraTabla1.setBackground(new java.awt.Color(0, 102, 153));
        cabeceraTabla1.setForeground(new java.awt.Color(255, 255, 255));
        //cargar_servicios();
        cargar_bienes();
        limpiar();
        DefaultTableModel tr = (DefaultTableModel) Tabla1.getModel();
        tr.setRowCount(0);
        cargar_tabla();
        limpiar();
    }

    private String getDateTime() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        Date date = new Date();
        return dateFormat.format(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Ficha = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDesequipo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textDessoporte = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textFechaEnt = new com.toedter.calendar.JDateChooser();
        textFechaSal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        textCodigo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textAnalista = new javax.swing.JFormattedTextField();
        aviso = new javax.swing.JTextField();
        btonincluir = new javax.swing.JButton();
        btoneliminar = new javax.swing.JButton();
        btonmodificar = new javax.swing.JButton();
        btoncancelar = new javax.swing.JButton();
        btonaceptar = new javax.swing.JButton();
        btonsalir = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        chReparacion = new javax.swing.JCheckBox();
        chInstalacion = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        chCerrado = new javax.swing.JCheckBox();
        textUsuario = new javax.swing.JTextField();
        userFind = new javax.swing.JButton();
        analistaFind = new javax.swing.JButton();
        cbBien = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REGISTRO DE SOPORE TECNICO");
        setBackground(new java.awt.Color(0, 102, 153));
        setResizable(false);

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Código de");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(10, 15, 130, 15);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Usuario");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(10, 80, 45, 15);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        textDesequipo.setColumns(20);
        textDesequipo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        textDesequipo.setLineWrap(true);
        textDesequipo.setRows(5);
        textDesequipo.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textDesequipo);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(140, 140, 330, 100);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        textDessoporte.setColumns(20);
        textDessoporte.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        textDessoporte.setLineWrap(true);
        textDessoporte.setRows(5);
        textDessoporte.setWrapStyleWord(true);
        textDessoporte.setEnabled(false);
        jScrollPane2.setViewportView(textDessoporte);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(140, 250, 330, 100);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("solicitud");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 30, 130, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Analista de soporte");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(10, 360, 130, 15);

        textFechaEnt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        textFechaEnt.setMinSelectableDate(new java.util.Date(-62135765898000L));
        textFechaEnt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFechaEntFocusLost(evt);
            }
        });
        textFechaEnt = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "####-##-##", '_');
        textFechaEnt.setFont(new java.awt.Font("Tahoma", 1, 12));
        jPanel3.add(textFechaEnt);
        textFechaEnt.setBounds(280, 10, 110, 20);

        textFechaSal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        textFechaSal = new com.toedter.calendar.JDateChooser("dd/MM/yyyy", "####-##-##", '_');
        textFechaSal.setFont(new java.awt.Font("Tahoma", 1, 12));
        jPanel3.add(textFechaSal);
        textFechaSal.setBounds(280, 40, 110, 20);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Entrada");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(188, 12, 60, 15);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Salida");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(190, 40, 50, 14);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Código del bien");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(10, 110, 120, 15);

        Tabla1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "BIEN", "USUARIO", "ANALISTA", "FECHA ENTRADA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla1.getTableHeader().setReorderingAllowed(false);
        Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Tabla1MouseReleased(evt);
            }
        });
        Tabla1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Tabla1KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(Tabla1);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(490, 90, 460, 410);

        textCodigo.setEditable(false);
        textCodigo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        textCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.add(textCodigo);
        textCodigo.setBounds(140, 12, 40, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Diagnostico");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(10, 250, 125, 15);

        textAnalista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textAnalista.setEnabled(false);
        textAnalista.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel3.add(textAnalista);
        textAnalista.setBounds(140, 360, 190, 23);

        aviso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        aviso.setForeground(new java.awt.Color(0, 0, 153));
        aviso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aviso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.add(aviso);
        aviso.setBounds(10, 450, 90, 21);

        btonincluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonincluir.setForeground(new java.awt.Color(0, 0, 102));
        btonincluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/incluir.png"))); // NOI18N
        btonincluir.setText("Incluir");
        btonincluir.setToolTipText("Incluir Registro");
        btonincluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btonincluir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btonincluir.setIconTextGap(10);
        btonincluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonincluirActionPerformed(evt);
            }
        });
        jPanel3.add(btonincluir);
        btonincluir.setBounds(110, 450, 120, 30);

        btoneliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btoneliminar.setForeground(new java.awt.Color(0, 0, 102));
        btoneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar.png"))); // NOI18N
        btoneliminar.setText("Borrar");
        btoneliminar.setToolTipText("Eliminar Registro");
        btoneliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btoneliminar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btoneliminar.setMaximumSize(new java.awt.Dimension(87, 23));
        btoneliminar.setMinimumSize(new java.awt.Dimension(87, 23));
        btoneliminar.setPreferredSize(new java.awt.Dimension(87, 23));
        btoneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoneliminarActionPerformed(evt);
            }
        });
        jPanel3.add(btoneliminar);
        btoneliminar.setBounds(110, 480, 120, 30);

        btonmodificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonmodificar.setForeground(new java.awt.Color(0, 0, 102));
        btonmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btonmodificar.setText("Modificar");
        btonmodificar.setToolTipText("Modificar Registro");
        btonmodificar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btonmodificar.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        btonmodificar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btonmodificar.setIconTextGap(5);
        btonmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonmodificarActionPerformed(evt);
            }
        });
        jPanel3.add(btonmodificar);
        btonmodificar.setBounds(230, 450, 120, 30);

        btoncancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btoncancelar.setForeground(new java.awt.Color(0, 51, 102));
        btoncancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btoncancelar.setText("Cancelar");
        btoncancelar.setToolTipText("Cancelar Registro");
        btoncancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btoncancelar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btoncancelar.setIconTextGap(8);
        btoncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoncancelarActionPerformed(evt);
            }
        });
        jPanel3.add(btoncancelar);
        btoncancelar.setBounds(230, 480, 120, 30);

        btonaceptar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonaceptar.setForeground(new java.awt.Color(0, 0, 102));
        btonaceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/disk.png"))); // NOI18N
        btonaceptar.setText("Guardar");
        btonaceptar.setToolTipText("Aceptar Registro");
        btonaceptar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btonaceptar.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        btonaceptar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btonaceptar.setIconTextGap(14);
        btonaceptar.setMaximumSize(new java.awt.Dimension(87, 23));
        btonaceptar.setMinimumSize(new java.awt.Dimension(87, 23));
        btonaceptar.setPreferredSize(new java.awt.Dimension(87, 23));
        btonaceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonaceptarActionPerformed(evt);
            }
        });
        jPanel3.add(btonaceptar);
        btonaceptar.setBounds(350, 450, 120, 30);

        btonsalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonsalir.setForeground(new java.awt.Color(0, 0, 102));
        btonsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        btonsalir.setText("Salida");
        btonsalir.setToolTipText("Salir de Cargo");
        btonsalir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btonsalir.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        btonsalir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btonsalir.setIconTextGap(14);
        btonsalir.setPreferredSize(new java.awt.Dimension(83, 23));
        btonsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonsalirActionPerformed(evt);
            }
        });
        jPanel3.add(btonsalir);
        btonsalir.setBounds(350, 480, 120, 30);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Descripción de la");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(10, 140, 130, 20);

        chReparacion.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        chReparacion.setText("Reparación");
        jPanel3.add(chReparacion);
        chReparacion.setBounds(140, 400, 106, 25);

        chInstalacion.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        chInstalacion.setText("Instalación");
        chInstalacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chInstalacionStateChanged(evt);
            }
        });
        jPanel3.add(chInstalacion);
        chInstalacion.setBounds(280, 400, 83, 25);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("solicitud");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(10, 160, 130, 20);

        chCerrado.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        chCerrado.setText("Orden cerrada");
        jPanel3.add(chCerrado);
        chCerrado.setBounds(140, 430, 120, 25);

        textUsuario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        textUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textUsuario.setEnabled(false);
        jPanel3.add(textUsuario);
        textUsuario.setBounds(140, 80, 180, 23);

        userFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ver.png"))); // NOI18N
        userFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFindActionPerformed(evt);
            }
        });
        jPanel3.add(userFind);
        userFind.setBounds(330, 73, 30, 30);

        analistaFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ver.png"))); // NOI18N
        analistaFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analistaFindActionPerformed(evt);
            }
        });
        jPanel3.add(analistaFind);
        analistaFind.setBounds(340, 360, 30, 30);

        jPanel3.add(cbBien);
        cbBien.setBounds(140, 110, 180, 20);

        Ficha.addTab("FICHA DE REGISTRO", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Ficha, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Ficha, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 4, 1000, 590);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiar() {
        textCodigo.setText(null);
        textFechaEnt.setDate(new Date());
        textFechaSal.setDate(new Date());
        textUsuario.setText(null);
        textAnalista.setText(null);
        //cbServicio.setSelectedIndex(0);
        //Ccodbien.setSelectedItem(0);
        cbBien.setSelectedItem(0);
        textDesequipo.setText(null);
        textDessoporte.setText(null);
        aviso.setText(null);
        cargar_tabla();
    }

    private void cargar_tabla() {
        //String valor = Ccodserv.getText().trim();
        DefaultTableModel tr = (DefaultTableModel) Tabla1.getModel();
        tr.setRowCount(0);
        try {
            /*rs = sql.executeQuery("SELECT * FROM soporte "
             + "inner join servicios on(servicios.cod_serv = soporte.codserv)"
             + " WHERE soporte.codserv=" + valor + " and soporte.edo_reg ='A' "
             + "order by soporte.fecharec desc ");*/
            /*rs = sql.executeQuery("SELECT * FROM soporte "
             + "inner join servicios on(servicios.cod_serv = soporte.codserv)"
             + " WHERE soporte.edo_reg ='A' "
             + "order by soporte.fecharec desc ");*/
            rs = sql.executeQuery("SELECT *, analista.nombre aname, cliente.nombre cname FROM soporte INNER JOIN cliente On cliente.codigo = soporte.cliente INNER JOIN analista ON analista.codigo = soporte.analista WHERE soporte.edo_reg ='A'");
            while (rs.next()) {
                tr.addRow(new Object[]{new Integer(rs.getInt("oid")), rs.getString("codbien"), rs.getString("cname"), rs.getString("aname"), PROCE.Verfecha(rs.getDate("fecharec"))});
                Tabla1.setModel(tr);
                TableColumn column = null;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void cargar_bienes() {
        try {
            flagState = true;
            rs = sql.executeQuery("SELECT * FROM inventario ORDER BY codbien");
            while (rs.next()) {
                cbBien.addItem(rs.getString("codbien"));
            }
            flagState = false;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /*void cargar_codServicios() {
     try {
     ResultSet x = sql.executeQuery("SELECT cod_serv FROM servicios WHERE den_serv = '" + cbServicio.getSelectedItem().toString() + "'");
     if (x.next()) {
     Ccodserv.setText(x.getString("cod_serv"));
     }
     } catch (SQLException ex) {
     ex.printStackTrace();
     }
     }*/
    public void buscar(String M1) {
        try {
            rs = sql.executeQuery("SELECT * FROM soporte WHERE oid=" + M1 + " ");
            if (rs.next()) {
                textCodigo.setText(rs.getString("oid"));
                textUsuario.setText(rs.getString("cliente"));
                textAnalista.setText(rs.getString("analista"));
                //Cnumbien.setText(rs.getString("numbien"));
                cbBien.setSelectedItem(rs.getString("codbien"));
                textDesequipo.setText(rs.getString("desequipo").toUpperCase().trim());
                textDessoporte.setText(rs.getString("dessoporte").toUpperCase().trim());
                //Ccodbien.setSelectedItem(rs.getString("codbien"));
                textFechaEnt.setDate(rs.getDate("fecharec"));
                textFechaSal.setDate(rs.getDate("fechasal"));
                //PROCE.Vfecha(
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String Gfecha(Date f2) {
        String fechaS;
        Date fecha1 = f2;
        if (fecha1 == null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
            try {
                fecha1 = sdf.parse("0001/01/01");
            } catch (ParseException ex) {
                Logger.getLogger(fsoporte.class.getName()).log(Level.SEVERE, null, ex);
            }
            fechaS = sdf.format(fecha1);
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
            fechaS = sdf.format(fecha1);
        }
        return fechaS;
    }

    private void btonincluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonincluirActionPerformed
        if (textCodigo.getText().isEmpty()) {
            opcion = 1;
            aviso.setText("INCLUIR");
            btonmodificar.setEnabled(false);
            btoneliminar.setEnabled(false);
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "CODIGO EXISTE", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btonincluirActionPerformed

    private void btoneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoneliminarActionPerformed
        if (swe != 0) {
            opcion = 3;
            swe = 1;
            aviso.setText("ELIMINACION");
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(true);
        }
}//GEN-LAST:event_btoneliminarActionPerformed

    private void btonmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonmodificarActionPerformed
        if (swe != 0) {
            if (textCodigo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "CODIGO VACIO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
            } else {
                opcion = 2;
                swe = 1;
                aviso.setText("MODIFICAR");
                btoncancelar.setEnabled(true);
                btonaceptar.setEnabled(true);
                chInstalacion.setEnabled(true);
            }
        }//GEN-LAST:event_btonmodificarActionPerformed
    }
        private void btonaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonaceptarActionPerformed
            try {
                if (textUsuario.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "ESCRIBA UN USUARIO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                } else if (cbBien.getSelectedItem().toString().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "POR FAVOR, INSERTE UN CÓDIGO DEL BIEN", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                } else if(textUsuario.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "POR FAVOR, INSERTE UN USUARIO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                } else if(textAnalista.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "POR FAVOR, INSERTE UN ANALISTA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    if (opcion == 1) {
                        save();
                        JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                    } else if (!textCodigo.getText().isEmpty()) {
                        if (opcion == 2) {
                            update();
                            JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                        } else if (opcion == 3) {
                            boolean state = delete();
                            if (!state) {
                                JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "A OCURRIDO UN ERROR EN LA OPERACIÓN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "CODIGO VACIO", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                    }
                    /*if (opcion == 1) {

                     try {
                     int usuario = textUsuario.getText();
                     String vnomrec = textAnalista.getText().toUpperCase().trim();
                     //String vcodserv = Ccodserv.getText();
                     String vcodbien = (String) Ccodbien.getSelectedItem();
                     String vnumbien = cbBien.getText();
                     String mcedula = menu.Vcedula;
                     String vdesequipo = textDesequipo.getText().toUpperCase().trim();
                     String vdessoporte = textDessoporte.getText().toUpperCase().trim();
                     String vfecharec = Gfecha(textFechaEnt.getDate());
                     String vfechasal = Gfecha(textFechaSal.getDate());
                     boolean state = sql.execute("insert into soporte (edo_reg,noment,nomrec,codserv,codbien,numbien,desequipo,dessoporte,fecharec,fechasal,cedula,tiempo,reparacion,instalacion,cerrado) "
                     + "values('" + vedoreg + "','" + vnoment + "','" + vnomrec + "','" + vcodserv + "','" + vcodbien + "','" + vnumbien + "','" + vdesequipo + "','" + vdessoporte + "','" + vfecharec + "','" + vfechasal + "','" + mcedula + "','" + getDateTime() + ",b'" + checkInt(chReparacion.isSelected()) + "',b'" + checkInt(chInstalacion.isSelected()) + "',b'" + checkInt(chCerrado.isSelected()) + "' )");

                     if (!state) {
                     JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                     } else {
                     JOptionPane.showMessageDialog(this, "A OCURRIDO UN ERROR EN LA OPERACIÓN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                     }

                     } catch (Exception e) {
                     e.printStackTrace();
                     }
                     }
                     // Actualizacion del Registro
                     if (opcion == 2) {
                     int fila = Tabla1.getSelectedRow();
                     Integer Numero = (Integer) Tabla1.getValueAt(fila, 0);
                     int a = JOptionPane.showConfirmDialog(this, "Desea Modificar el Registro"
                     + "", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                     if (a == 0) {
                     opcion = 0;
                     swe = 0;

                     try {
                     boolean state = sql.execute("update soporte "
                     + " set noment  = '" + textUsuario.getText().toUpperCase().trim() + "'"
                     + ",nomrec      = '" + textAnalista.getText().toUpperCase().trim() + "'"
                     //+ ",codserv     = '" + Ccodserv.getText() + "'"
                     + ",desequipo   = '" + textDesequipo.getText().toUpperCase().trim() + "'"
                     + ",dessoporte  = '" + textDessoporte.getText().toUpperCase().trim() + "'"
                     + ",codbien     = '" + Ccodbien.getSelectedItem() + "'"
                     + ",numbien     = '" + cbBien.getText() + "'"
                     + ",cedula      = '" + menu.Vcedula + "'"
                     + ",tiempo      = '" + getDateTime() + "'"
                     + ",fecharec    = '" + Gfecha(textFechaEnt.getDate()) + "'"
                     + ",fechasal    = '" + Gfecha(textFechaSal.getDate()) + "'"
                     + ",reparacion  = b'" + checkInt(chReparacion.isSelected()) + "'"
                     + ",instalacion = b'" + checkInt(chInstalacion.isSelected()) + "'"
                     + ",cerrado     = b'" + checkInt(chCerrado.isSelected()) + "'"
                     + "WHERE oid       = '" + Numero + "'");

                     if (!state) {
                     JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                     } else {
                     JOptionPane.showMessageDialog(this, "A OCURRIDO UN ERROR EN LA OPERACIÓN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                     }
                     } catch (Exception e) {
                     }
                     }
                     }
                     // Eliminacion del Registro
                     if (opcion == 3) {
                     int a = JOptionPane.showConfirmDialog(this, "DESEA ELIMINAR EL REGISTRO"
                     + "", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                     if (a == 0) {

                     try {

                     boolean state = sql.execute("UPDATE soporte SET edo_reg  ='D' WHERE oid ='" + txtCodigo.getText() + "' ");

                     if (!state) {
                     JOptionPane.showMessageDialog(this, "OPERACION EXITOSA", "A T E N C I O N", JOptionPane.INFORMATION_MESSAGE);
                     } else {
                     JOptionPane.showMessageDialog(this, "A OCURRIDO UN ERROR EN LA OPERACIÓN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
                     }
                     } catch (Exception e) {
                     }
                     }
                     }*/
                    cargar_tabla();
                    swe = 0;
                    limpiar();
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "A OCURRIDO UN ERROR EN LA OPERACIÓN", "A T E N C I O N", JOptionPane.ERROR_MESSAGE);
            }
}//GEN-LAST:event_btonaceptarActionPerformed

    boolean save() throws SQLException {
        //int codigo = Integer.parseInt(textCodigo.getText());
        SoporteController control = new SoporteController();
        if (textCodigo.getText().isEmpty()) {
            int user = Integer.parseInt(textUsuario.getText());
            int analista = Integer.parseInt(textAnalista.getText());
            java.sql.Date entrada = new java.sql.Date(textFechaEnt.getDate().getTime());
            java.sql.Date salida = new java.sql.Date(textFechaSal.getDate().getTime());
            int codbien = Integer.parseInt(cbBien.getSelectedItem().toString());
            String descripcion = textDessoporte.getText();
            String diagnostico = textDesequipo.getText();
            boolean reparacion = chReparacion.isSelected();
            boolean instalacion = chInstalacion.isSelected();
            boolean cerrado = chCerrado.isSelected();
            Soporte data = new Soporte();
            data.setCliente(user);
            data.setAnalista(analista);
            data.setFechaRec(entrada);
            data.setFechaSal(salida);
            data.setCodBien(codbien);
            data.setDesEquipo(diagnostico);
            data.setDesSoporte(descripcion);
            data.setInstalacion(reparacion);
            data.setInstalacion(instalacion);
            data.setCerrado(cerrado);
            return control.createSoporte(data);
        }
        return true;
    }

    boolean update() throws SQLException {
        int codigo = Integer.parseInt(textCodigo.getText());
        int user = Integer.parseInt(textUsuario.getText());
        int analista = Integer.parseInt(textAnalista.getText());
        java.sql.Date entrada = new java.sql.Date(textFechaEnt.getDate().getTime());
        java.sql.Date salida = new java.sql.Date(textFechaSal.getDate().getTime());
        int codbien = Integer.parseInt(cbBien.getSelectedItem().toString());
        String descripcion = textDessoporte.getText();
        String diagnostico = textDesequipo.getText();
        boolean reparacion = chReparacion.isSelected();
        boolean instalacion = chInstalacion.isSelected();
        boolean cerrado = chCerrado.isSelected();
        SoporteController control = new SoporteController();
        Soporte data = new Soporte();
        data.setOid(codigo);
        data.setCliente(user);
        data.setAnalista(analista);
        data.setFechaRec(entrada);
        data.setFechaSal(salida);
        data.setCodBien(codbien);
        data.setDesEquipo(diagnostico);
        data.setDesSoporte(descripcion);
        data.setInstalacion(reparacion);
        data.setInstalacion(instalacion);
        data.setCerrado(cerrado);
        return control.update(data);
    }

    boolean delete() throws SQLException {
        return sql.execute("UPDATE soporte SET edo_reg  ='D' WHERE oid ='" + Integer.parseInt(textCodigo.getText()) + "' ");
    }

    int checkInt(boolean val) {
        return (val == true) ? 1 : 0;
    }

        private void btonsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonsalirActionPerformed
            try {
                limpiar();
                dispose();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(fsoporte.class.getName()).log(Level.SEVERE, null, ex);
            }
}//GEN-LAST:event_btonsalirActionPerformed

        private void Tabla1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla1KeyReleased
            EDITAR_TABLA();
        }//GEN-LAST:event_Tabla1KeyReleased

        private void Tabla1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla1MouseReleased
            EDITAR_TABLA();
        }//GEN-LAST:event_Tabla1MouseReleased

    void EDITAR_TABLA() {
        swe = 1;
        int fila = Tabla1.getSelectedRow();
        String codigo = Tabla1.getValueAt(fila, 0).toString();
        //String vcode = Tabla1.getValueAt(fila, 2).toString();
        //String vdes = Tabla1.getValueAt(fila, 3).toString();

        //ResultSet rs = sql.executeQuery("SELECT * FROM ")
        Nregistro = codigo;
        //Ccodserv.setText(vcode);
        //cbServicio.setSelectedItem(vdes);
        //Cservicio.setText(vdes);
        buscar(codigo);
        btonmodificar.setEnabled(true);
        btoneliminar.setEnabled(true);
        btonaceptar.setEnabled(true);

        //permiso();
    }

        private void btoncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoncancelarActionPerformed
            //DefaultTableModel tr = (DefaultTableModel) Tabla1.getModel();
            //tr.setRowCount(0);
            aviso.setText("");
            swe = 0;
            //Ccodserv.setText(null);
            limpiar();
            btonmodificar.setEnabled(false);
            btoneliminar.setEnabled(false);
            btoncancelar.setEnabled(true);
            btonaceptar.setEnabled(false);
            btonsalir.setEnabled(true);
            Ficha.setSelectedIndex(0);
        }//GEN-LAST:event_btoncancelarActionPerformed

    private void chInstalacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chInstalacionStateChanged
        if (chInstalacion.isSelected() == true) {
            textDessoporte.setEnabled(true);
        } else {
            textDessoporte.setEnabled(false);
        }
    }//GEN-LAST:event_chInstalacionStateChanged
    boolean flagState;
    private void textFechaEntFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFechaEntFocusLost
        textFechaSal.setMinSelectableDate(textFechaEnt.getDate());
    }//GEN-LAST:event_textFechaEntFocusLost

    private void userFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFindActionPerformed
        int codigo;
        if (textUsuario.getText().isEmpty()) {
            codigo = 0;
        } else {
            codigo = Integer.parseInt(textUsuario.getText());
        }
        cliente = new ClienteView(this, 'U', codigo);
    }//GEN-LAST:event_userFindActionPerformed

    private void analistaFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analistaFindActionPerformed
        int codigo;
        if (textAnalista.getText().isEmpty()) {
            codigo = 0;
        } else {
            codigo = Integer.parseInt(textAnalista.getText());
        }
        cliente = new ClienteView(this, 'A', codigo);
    }//GEN-LAST:event_analistaFindActionPerformed

    /*private void permiso() {
     btonaceptar.setEnabled(false);
     if (txtopi.compareTo("0") == 0) {
     btonincluir.setEnabled(false);
     } else {
     btonincluir.setEnabled(true);
     }
     if (txtopm.compareTo("0") == 0) {
     btonmodificar.setEnabled(false);
     } else {
     btonmodificar.setEnabled(true);
     }
     if (txtope.compareTo("0") == 0) {
     btoneliminar.setEnabled(false);
     } else {
     btoneliminar.setEnabled(true);
     }
     }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fsoporte().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Ficha;
    private javax.swing.JTable Tabla1;
    public static javax.swing.JButton analistaFind;
    private javax.swing.JTextField aviso;
    private javax.swing.JButton btonaceptar;
    private javax.swing.JButton btoncancelar;
    private javax.swing.JButton btoneliminar;
    private javax.swing.JButton btonincluir;
    private javax.swing.JButton btonmodificar;
    private javax.swing.JButton btonsalir;
    private javax.swing.JComboBox cbBien;
    private javax.swing.JCheckBox chCerrado;
    private javax.swing.JCheckBox chInstalacion;
    private javax.swing.JCheckBox chReparacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JFormattedTextField textAnalista;
    private javax.swing.JTextField textCodigo;
    private javax.swing.JTextArea textDesequipo;
    private javax.swing.JTextArea textDessoporte;
    private com.toedter.calendar.JDateChooser textFechaEnt;
    private com.toedter.calendar.JDateChooser textFechaSal;
    public static javax.swing.JTextField textUsuario;
    public static javax.swing.JButton userFind;
    // End of variables declaration//GEN-END:variables

}
